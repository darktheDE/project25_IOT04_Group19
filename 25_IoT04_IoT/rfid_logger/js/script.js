// File: js/script.js

document.addEventListener('DOMContentLoaded', function() {
    const remoteOpenBtn = document.getElementById('remoteOpenBtn');
    const remoteMsgDiv = document.getElementById('remote-message');
    const logList = document.getElementById('log-list');

    // Ch·ªâ ch·∫°y code n√†y n·∫øu c√°c element t·ªìn t·∫°i (t·ª©c l√† ƒëang ·ªü trang dashboard)
    if (remoteOpenBtn && remoteMsgDiv && logList) {

        // X·ª≠ l√Ω n√∫t M·ªü C·ª≠a T·ª´ Xa
        remoteOpenBtn.addEventListener('click', () => {
            if (confirm('B·∫°n c√≥ ch·∫Øc mu·ªën m·ªü c·ª≠a t·ª´ xa kh√¥ng?')) {
                remoteMsgDiv.textContent = 'ƒêang g·ª≠i y√™u c·∫ßu...';
                remoteMsgDiv.style.color = 'var(--secondary-color)';

                fetch('actions/trigger_open.php') // G·ªçi file PHP x·ª≠ l√Ω
                    .then(response => {
                        if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); }
                        return response.text();
                    })
                    .then(data => {
                        remoteMsgDiv.textContent = data;
                        remoteMsgDiv.style.color = data.includes('L·ªói') || data.includes('Kh√¥ng t√¨m th·∫•y') ? 'var(--danger-color)' : 'var(--success-color)';
                        // T·ª± ƒë·ªông x√≥a th√¥ng b√°o sau 5 gi√¢y
                        setTimeout(() => { remoteMsgDiv.textContent = ''; }, 5000);
                    })
                    .catch(error => {
                        console.error('Fetch Error:', error);
                        remoteMsgDiv.textContent = 'L·ªói k·∫øt n·ªëi ho·∫∑c x·ª≠ l√Ω!';
                        remoteMsgDiv.style.color = 'var(--danger-color)';
                        setTimeout(() => { remoteMsgDiv.textContent = ''; }, 5000);
                    });
            }
        });

        // H√†m l·∫•y log m·ªõi nh·∫•t (Polling)
        function fetchLatestLogs() {
            fetch('actions/get_latest_logs.php') // G·ªçi file PHP l·∫•y log
                .then(response => {
                    if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`);}
                    return response.json(); // Mong ƒë·ª£i JSON
                })
                .then(logs => {
                    logList.innerHTML = ''; // X√≥a log c≈©
                    if (logs && logs.length > 0) {
                        logs.forEach(log => {
                            const li = document.createElement('li');
                            // ƒê·ªãnh d·∫°ng th·ªùi gian H:i:s
                            const time = new Date(log.scan_time).toLocaleTimeString('vi-VN', { hour12: false });
                            let message = `${time} - UID: ${log.tag_uid} `;
                            if (log.tag_name_at_scan) {
                                message += `(${log.tag_name_at_scan}) `;
                            }

                            let resultClass = '';
                            if (log.access_result === 'AUTHORIZED') {
                                message += '‚úÖ'; resultClass = 'log-success';
                            } else if (log.access_result === 'UNAUTHORIZED'){
                                message += 'üö´'; resultClass = 'log-fail';
                            } else {
                                message += `‚ö†Ô∏è (${log.access_result || '?'})`; resultClass = 'log-error';
                            }
                            li.textContent = message;
                            li.className = resultClass; // Th√™m class CSS
                            logList.appendChild(li);
                        });
                    } else {
                        logList.innerHTML = '<li>Ch∆∞a c√≥ ho·∫°t ƒë·ªông n√†o g·∫ßn ƒë√¢y.</li>';
                    }
                })
                .catch(error => {
                    console.error('L·ªói l·∫•y log:', error);
                    // C√≥ th·ªÉ hi·ªÉn th·ªã l·ªói tr√™n UI n·∫øu mu·ªën, nh∆∞ng t·∫°m th·ªùi ch·ªâ log console
                    // logList.innerHTML = '<li>L·ªói t·∫£i d·ªØ li·ªáu log.</li>';
                });
        }

        // L·∫•y log l·∫ßn ƒë·∫ßu khi t·∫£i trang
        fetchLatestLogs();

        // T·ª± ƒë·ªông c·∫≠p nh·∫≠t log m·ªói 5 gi√¢y
        setInterval(fetchLatestLogs, 5000); // 5000ms = 5 gi√¢y
    }

    // Th√™m active class cho menu d·ª±a tr√™n trang hi·ªán t·∫°i (v√≠ d·ª• ƒë∆°n gi·∫£n)
    const currentPage = window.location.pathname.split("/").pop();
    const navLinks = document.querySelectorAll('header nav ul li a');
    navLinks.forEach(link => {
        if (link.getAttribute('href') === currentPage) {
            link.classList.add('active');
        }
    });

}); // End DOMContentLoaded